t12 = temp12$statistic
SEM12 = (temp12$conf.int[2] - temp12$conf.int[1]) / 3.92
temp12;SEM12 #Sig!
##Symmetrical
temp13 = t.test(IOC.JOL2$S, IOC.Recall2$S, paired = T, p.adjust.methods = "Bonferroni")
p13 = round(temp13$p.value, 3)
t13 = temp13$statistic
SEM13 = (temp13$conf.int[2] - temp13$conf.int[1]) / 3.92
temp13;SEM13 #NON-Sig
##Unrelated
temp14 = t.test(IOC.JOL2$U, IOC.Recall2$U, paired = T, p.adjust.methods = "Bonferroni")
p14 = round(temp14$p.value, 3)
t14 = temp14$statistic
SEM14 = (temp14$conf.int[2] - temp14$conf.int[1]) / 3.92
temp14;SEM14 #Sig!
##So collapsing across instruction type, the IOC replicates for backward and unrelated pairs, does not occur for symmetrical pairs!
####Three-way interaction####
##Need to subset by instruction type now
#Start with JOLs
Read.JOL = subset(IOC.JOL,
IOC.JOL$type == "READ")
IS.JOL = subset(IOC.JOL,
IOC.JOL$type == "IS")
RL.JOL = subset(IOC.JOL,
IOC.JOL$type == "RL")
#Now do recall
Read.RECALL = subset(IOC.Recall,
IOC.Recall$type == "READ")
IS.RECALL = subset(IOC.Recall,
IOC.Recall$type == "IS")
RL.RECALL = subset(IOC.Recall,
IOC.Recall$type == "RL")
#Now get subject level means for these datasets
#JOLs
Read.JOL2 = cast(Read.JOL, Subject ~ Direction, mean)
IS.JOL2 = cast(IS.JOL, Subject ~ Direction, mean)
RL.JOL2 = cast(RL.JOL, Subject ~ Direction, mean)
x1 = apply(Read.JOL2[ , -1], 2, mean)
x2 = apply(IS.JOL2[ , -1], 2, mean)
x3 = apply(RL.JOL2[ , -1], 2, mean)
y1 = apply(Read.JOL2[ , -1], 2, sd)
y2 = apply(IS.JOL2[ , -1], 2, sd)
y3 = apply(RL.JOL2[ , -1], 2, sd)
z1 = y1 / sqrt(nrow(Read.JOL2))
z2 = y2 / sqrt(nrow(IS.JOL2))
z3 = y3 / sqrt(nrow(RL.JOL2))
z1 = z1 * 1.96
z2 = z2 * 1.96
z3 = z3 * 1.96
x1 + z1
x1 - z1
x2 + z2
x2 - z2
x3 + z3
x3 - z3
#Recall
Read.RECALL2 = cast(Read.RECALL, Subject ~ Direction, mean)
IS.RECALL2 = cast(IS.RECALL, Subject ~ Direction, mean)
RL.RECALL2 = cast(RL.RECALL, Subject ~ Direction, mean)
A1 = apply(Read.RECALL2[ , -1], 2, mean)
A2 = apply(IS.RECALL2[ , -1], 2, mean)
A3 = apply(RL.RECALL2[ , -1], 2, mean)
B1 = apply(Read.RECALL2[ , -1], 2, sd)
B2 = apply(IS.RECALL2[ , -1], 2, sd)
B3 = apply(RL.RECALL2[ , -1], 2, sd)
C1 = B1 / sqrt(nrow(Read.RECALL2))
C2 = B2 / sqrt(nrow(IS.RECALL2))
C3 = B3 / sqrt(nrow(RL.RECALL2))
C1 = C1 * 1.96
C2 = C2 * 1.96
C3 = C3 * 1.96
A1 + z1
A1 - z1
A2 + z2
A2 - z2
A3 + z3
A3 - z3
#Now get SD
#Start with Recall
#Read
sd(Read.RECALL2$B)
sd(Read.RECALL2$F)
sd(Read.RECALL2$S)
sd(Read.RECALL2$U)
#IS
sd(IS.RECALL2$B)
sd(IS.RECALL2$F)
sd(IS.RECALL2$S)
sd(IS.RECALL2$U)
#RL
sd(RL.RECALL2$B)
sd(RL.RECALL2$F)
sd(RL.RECALL2$S)
sd(RL.RECALL2$U)
#Now JOLs
#Read
sd(Read.JOL2$B)
sd(Read.JOL2$F)
sd(Read.JOL2$S)
sd(Read.JOL2$U)
#IS
sd(IS.JOL2$B)
sd(IS.JOL2$F)
sd(IS.JOL2$S)
sd(IS.JOL2$U)
#RL
sd(RL.JOL2$B)
sd(RL.JOL2$F)
sd(RL.JOL2$S)
sd(RL.JOL2$U)
##Now do the t-tests
###Start with Unrelated
#IS
temp = t.test(IS.JOL2$U, IS.RECALL2$U, paired = T, p.adjust.methods = "Bonferroni")
p = round(temp$p.value, 3)
t = temp$statistic
SEM = (temp$conf.int[2] - temp$conf.int[1]) / 3.92
#Read
temp = t.test(Read.JOL2$U, Read.RECALL2$U, paired = T, p.adjust.methods = "Bonferroni")
p = round(temp$p.value, 3)
t = temp$statistic
SEM = (temp$conf.int[2] - temp$conf.int[1]) / 3.92
#RL
temp = t.test(RL.JOL2$U, RL.RECALL2$U, paired = T, p.adjust.methods = "Bonferroni")
p = round(temp$p.value, 3)
t = temp$statistic
SEM = (temp$conf.int[2] - temp$conf.int[1]) / 3.92
###Now do backward pairs
#IS
temp = t.test(IS.JOL2$B, IS.RECALL2$B, paired = T, p.adjust.methods = "Bonferroni")
p = round(temp$p.value, 3)
t = temp$statistic
SEM = (temp$conf.int[2] - temp$conf.int[1]) / 3.92
#Read
temp = t.test(Read.JOL2$B, Read.RECALL2$B, paired = T, p.adjust.methods = "Bonferroni")
p = round(temp$p.value, 3)
t = temp$statistic
SEM = (temp$conf.int[2] - temp$conf.int[1]) / 3.92
#RL
temp = t.test(RL.JOL2$B, RL.RECALL2$B, paired = T, p.adjust.methods = "Bonferroni")
p = round(temp$p.value, 3)
t = temp$statistic
SEM = (temp$conf.int[2] - temp$conf.int[1]) / 3.92
##Forward pairs
#IS
temp = t.test(IS.JOL2$F, IS.RECALL2$F, paired = T, p.adjust.methods = "Bonferroni")
p = round(temp$p.value, 3)
t = temp$statistic
SEM = (temp$conf.int[2] - temp$conf.int[1]) / 3.92
mean(IS.JOL2$F)
mean(IS.RECALL2$F)
sd(IS.JOL2$F)
sd(IS.RECALL2$F)
#Read
temp = t.test(Read.JOL2$F, Read.RECALL2$F, paired = T, p.adjust.methods = "Bonferroni")
p = round(temp$p.value, 3)
t = temp$statistic
SEM = (temp$conf.int[2] - temp$conf.int[1]) / 3.92
mean(Read.JOL2$F)
mean(Read.RECALL2$F)
Read.JOL2$task = rep("JOL")
Read.RECALL2$task = rep("RECALL")
pbic2 = rbind(Read.JOL2, Read.RECALL2)
length(unique(pbic2$Subject))
ezANOVA(pbic2,
dv = F,
within = task,
wid = Subject,
type = 3,
detailed = T)
#RL
temp = t.test(RL.JOL2$F, RL.RECALL2$F, paired = T, p.adjust.methods = "Bonferroni")
p = round(temp$p.value, 3)
t = temp$statistic
SEM = (temp$conf.int[2] - temp$conf.int[1]) / 3.92
mean(RL.JOL2$F)
mean(RL.RECALL2$F)
RL.JOL2$task = rep("JOL")
RL.RECALL2$task = rep("RECALL")
pbic3 = rbind(RL.JOL2, RL.RECALL2)
length(unique(pbic3$Subject))
ezANOVA(pbic3,
dv = F,
within = task,
wid = Subject,
type = 3,
detailed = T)
##symmetrical pairs
####Put together output for Bar charts/Tables####
##First, drop the Block, RT Column, and task columns
anova_jol2 = anova_jol[ , -c(3, 4, 7)]
anova_recall2 = anova_recall[ , -c(3, 4, 7)]
##Now subset based on encoding strategy
table(anova_jol2$type)
##jols
IS_JOL3 = subset(anova_jol2,
anova_jol2$type == "IS")
RL_JOL3 = subset(anova_jol2,
anova_jol2$type == "RL")
Read_JOL3 = subset(anova_jol2,
anova_jol2$type == "READ")
##Recall
IS.RECALL3 = subset(anova_recall2,
anova_recall2$type == "IS")
RL.RECALL3 = subset(anova_recall2,
anova_recall2$type == "RL")
Read.RECALL3 = subset(anova_recall2,
anova_recall2$type == "READ")
##Okay, now cast them into the right form
##jols
IS_JOL4 = cast(IS_JOL3, Subject ~ Direction, mean, na.rm = T)
RL_JOL4 = cast(RL_JOL3, Subject ~ Direction, mean, na.rm = T)
READ_JOL4 = cast(Read_JOL3, Subject ~ Direction, mean, na.rm = T)
##Recall
IS.RECALL4 = cast(IS.RECALL3, Subject ~ Direction, mean, na.rm = T)
RL.RECALL4 = cast(RL.RECALL3, Subject ~ Direction, mean, na.rm = T)
Read.RECALL4 = cast(Read.RECALL3, Subject ~ Direction, mean, na.rm = T)
##Write stuff to .csv
#write.csv(IS_JOL4, file = "IS JOLS.csv", row.names = F)
#write.csv(RL_JOL4, file = "RL JOLS.csv", row.names = F)
#write.csv(READ_JOL4, file = "Read JOLs.csv", row.names = F)
#write.csv(IS.RECALL4, file = "IS RECALL.csv", row.names = F)
#write.csv(RL.RECALL4, file = "RL RECALL.csv", row.names = F)
#write.csv(Read.RECALL4, file = "Read RECALL.csv", row.names = F)
##Do the supplemental table
block1 = subset(anova_data, anova_data$Block == 1)
block2 = subset(anova_data, anova_data$Block == 2)
#Now split each block by measure
block1.jol = subset(block1, block1$Task == "JOL")
block2.jol = subset(block2, block2$Task == "JOL")
block1.recall = subset(block1, block1$Task == "Recall")
block2.recall = subset(block2, block2$Task == "Recall")
tapply(block1.jol$Score, list(block1.jol$type, block1.jol$Direction), mean, na.rm = T)
tapply(block1.recall$Score, list(block1.recall$type, block1.recall$Direction), mean, na.rm = T)
tapply(block2.jol$Score, list(block2.jol$type, block2.jol$Direction), mean, na.rm = T)
tapply(block2.recall$Score, list(block2.recall$type, block2.recall$Direction), mean, na.rm = T)
##Do some t-tests
####Do that other analysis Mark wants because he's never satisfied####
JOLS = subset(anova_data,
anova_data$Task == "JOL")
RECALL = subset(anova_data,
anova_data$Task == "Recall")
##Get means
tapply(JOLS$Score, JOLS$type, mean, na.rm = T)
tapply(RECALL$Score, RECALL$type, mean, na.rm = T)
##JOLs
output1 = ezANOVA(JOLS,
dv = Score,
between = type,
wid = Subject,
type = 3,
detailed = 3)
output1$ANOVA$MSE = output1$ANOVA$SSd/output1$ANOVA$DFd
output1$ANOVA$MSE
##Now do Recall
RECALL2 = cast(RECALL, Subject ~ type, mean)
IS = RECALL2$IS
IS = na.omit(IS)
RL = RECALL2$RL
RL = na.omit(RL)
READ = RECALL2$READ
READ = na.omit(READ)
t.test(IS, RL, paired = F, p.adjust.methods = "Bonferroni")
t.test(READ, RL, paired = F, p.adjust.methods = "Bonferroni")
t.test(IS, READ, paired = F, p.adjust.methods = "Bonferroni")
mean(READ)
mean(RL)
sd(READ)
sd(RL)
####Do the three-way interactions####
View(RECALL)
tapply(RECALL$Score, list(RECALL$Direction, RECALL$Block), mean, na.rm = T)
tapply(JOLS$Score, list(JOLS$Direction, JOLS$Block), mean, na.rm = T)
#Do t tests
B1 = subset(RECALL, RECALL$Block == "1")
B2 = subset(RECALL, RECALL$Block == "2")
B11 = subset(JOLS, JOLS$Block == "1")
B22 = subset(JOLS, JOLS$Block == "2")
RL1 = cast(B1, Subject ~ type, mean)
RL2 = cast(B2, Subject ~ type, mean)
JL1 = cast(B11, Subject ~ type, mean)
JL2 = cast(B22, Subject ~ type, mean)
#Test time!
#Read
temp1 = t.test(JL1$READ, RL1$READ, paired = T, p.adjust.methods = "Bonferroni")
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(JL2$READ, RL2$READ, paired = T, p.adjust.methods = "Bonferroni")
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
mean(JL2$READ, na.rm = T)
mean(RL2$READ, na.rm = T)
sd(JL2$READ, na.rm = T)
sd(RL2$READ, na.rm = T)
temp1 = t.test(JL2$IS, RL2$IS, paired = T, p.adjust.methods = "Bonferroni")
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
mean(JL2$RL, na.rm = T)
mean(RL2$RL, na.rm = T)
sd(JL2$RL, na.rm = T)
sd(RL2$RL, na.rm = T)
temp1 = t.test(JL2$RL, RL2$RL, paired = T, p.adjust.methods = "Bonferroni")
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
#do pbic
pbic3 = RL1[ , c(1, 2)]
pbic4 = JL1[ , c(1, 2)]
pbic3$block = rep("1")
pbic4$block = rep("2")
pbic5 = rbind(pbic3, pbic4)
pbic5 = na.omit(pbic5)
ezANOVA(pbic5,
wid = Subject,
dv = RL,
within = block,
detailed = T)
#Now do relational
temp1 = t.test(JL1$RL, RL1$RL, paired = T, p.adjust.methods = "Bonferroni")
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
##Now do the stuff collapsed across direction
RL1 = cast(B1, Subject ~ Direction, mean)
RL2 = cast(B2, Subject ~ Direction, mean)
JL1 = cast(B11, Subject ~ Direction, mean)
JL2 = cast(B22, Subject ~ Direction, mean)
#do more t-tests
temp1 = t.test(JL1$U, RL1$U, paired = T, p.adjust.methods = "Bonferroni")
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
mean(JL1$U, na.rm = T)
mean(RL1$U, na.rm = T)
sd(JL1$U, na.rm = T)
sd(RL1$U, na.rm = T)
#pbic
#do pbic
pbic3 = RL1[ , c(1, 4)]
pbic4 = JL1[ , c(1, 4)]
pbic3$block = rep("1")
pbic4$block = rep("2")
pbic5 = rbind(pbic3, pbic4)
pbic5 = na.omit(pbic5)
ezANOVA(pbic5,
wid = Subject,
dv = S,
within = block,
detailed = T)
##Okay, do that last analysis
e2 = read.csv("e2 recall.csv")
RECALL1 = subset(RECALL,
RECALL$Task != "READ")
RECALL2 = subset(e2,
e2$Task != "READ")
mean(RECALL1$Score)
mean(RECALL2$Score)
E1 = cast(RECALL1,
RECALL1$Subject ~ TASK)
E1 = cast(RECALL1,
Subject ~ TASK)
E1 = cast(RECALL1,
Subject ~ Task)
E1 = cast(RECALL1,
Subject ~ Task, mean)
View(E1)
E1 = cast(RECALL1,
Subject ~ Task, mean, na.rm = T)
E2 = cast(RECALL2,
$Username, Task, mean, na.rm = T)
E2 = cast(RECALL2,
Username, Task, mean, na.rm = T)
E2 = cast(RECALL2,
Username ~ Task, mean, na.rm = T)
E2 = cast(RECALL2,
Username[ , -8] ~ Task, mean, na.rm = T)
E2 = cast(RECALL2[ , -8],
Username ~ Task, mean, na.rm = T)
View(E2)
temp1 = t.test(E1$Recall, E2$Recall, paired = F, p.adjust.methods = "Bonferroni")
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
SEM1
sd(RECALL1$Score)
sd(RECALL2$Score)
##okay, do that last thing
RECALL2A = subset(RECALL2,
RECALL2$Block == "1")
##okay, do that last thing
E3 = subset(E2,
E2$Block == "1")
E4 = subset(E2,
E2$Block == "2")
##okay, do that last thing
E3 = subset(RECALL2,
RECALL2$Block == "1")
E4 = subset(RECALL2,
RECALL2$Block == "2")
mean(E3$Score)
mean(E4$Score)
View(E3)
View(E3)
E5 = cast(E3[ , -9],
Username ~ Task, mean, na.rm = T)
E5 = cast(E3[ , -8],
Username ~ Task, mean, na.rm = T)
E6 = cast(E4[ , -8],
Username ~ Task, mean, na.rm = T)
View(E6)
temp1 = t.test(E5$Recall, E6$Recall, paired = F, p.adjust.methods = "Bonferroni")
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(E5$Recall, E6$Recall, paired = F, p.adjust.methods = "Bonferroni")
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(E5$Recall, E6$Recall, paired = T, p.adjust.methods = "Bonferroni")
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
SEM1
sd(E3$Score)
sd(E4$Score)
temp1 = t.test(E5$Recall, E6$Recall, paired = F, p.adjust.methods = "Bonferroni")
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
temp1 = t.test(E5$Recall, E6$Recall, paired = T, p.adjust.methods = "Bonferroni")
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
combined = RECALL2
combined = RECALL2
##Cut out the bad participants
combined = subset(combined,
combined$Username != "5b5b9fdfe")
combined = subset(combined,
combined$Username != "5e17594")
combined = subset(combined,
combined$Username != "5e605068")
combined = subset(combined,
combined$Username != "w10015978cjb")
combined = subset(combined,
combined$Username != "w843943JC")
combined = subset(combined,
combined$Username != "w993002_MR")
combined = subset(combined,
combined$Username != "w10084909JR")
combined = subset(combined,
combined$Username != "w917542_rm")
combined = subset(combined,
combined$Username != "w979990amf")
combined = subset(combined,
combined$Username != "w10016099CJ")
combined = subset(combined,
combined$Username != "w10021803mm")
combined = subset(combined,
combined$Username != "w982395_JEM")
RECALL2 = combined
mean(RECALL1$Score)
mean(RECALL2$Score)
sd(RECALL1$Score)
sd(RECALL2$Score)
E1 = cast(RECALL1,
Subject ~ Task, mean, na.rm = T)
E2 = cast(RECALL2[ , -8],
Username ~ Task, mean, na.rm = T)
temp1 = t.test(E1$Recall, E2$Recall, paired = F, p.adjust.methods = "Bonferroni")
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
##okay, do that last thing
E3 = subset(RECALL2,
RECALL2$Block == "1")
E4 = subset(RECALL2,
RECALL2$Block == "2")
mean(E3$Score)
mean(E4$Score)
sd(E3$Score)
sd(E4$Score)
E5 = cast(E3[ , -8],
Username ~ Task, mean, na.rm = T)
E6 = cast(E4[ , -8],
Username ~ Task, mean, na.rm = T)
temp1 = t.test(E5$Recall, E6$Recall, paired = T, p.adjust.methods = "Bonferroni")
p1 = round(temp1$p.value, 3)
t1 = temp1$statistic
SEM1 = (temp1$conf.int[2] - temp1$conf.int[1]) / 3.92
temp1 #sig
SEM1
mean(E3$Score)
mean(E4$Score)
sd(E3$Score)
sd(E4$Score)
